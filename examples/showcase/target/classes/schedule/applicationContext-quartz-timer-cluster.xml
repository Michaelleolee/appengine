<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-lazy-init="true">

	<description>Quartz的定时集群任务配置</description>

	<!-- Quartz集群Schduler -->
	<!--<bean id="clusterQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		&lt;!&ndash; Triggers集成 &ndash;&gt;
		<property name="triggers">
			<list>
				<ref bean="timerTrigger" />
			</list>
		</property>
		&lt;!&ndash;  quartz配置文件路径, 指向cluster配置 &ndash;&gt;
		<property name="configLocation" value="classpath:schedule/quartz-cluster.properties" />
		&lt;!&ndash; 启动时延期2秒开始任务 &ndash;&gt;
		<property name="startupDelay" value="2" />
		&lt;!&ndash; 保存Job数据到数据库所需的数据源 &ndash;&gt;
		<property name="dataSource" ref="quartzDataSource" />
		&lt;!&ndash; Job接受applicationContext的成员变量名 &ndash;&gt;
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>

	&lt;!&ndash; Timer式 Trigger定义&ndash;&gt;
	<bean id="timerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="timerJobDetail" />
		&lt;!&ndash; 每次执行间隔5分钟 &ndash;&gt;
		<property name="repeatInterval" value="300000" />
	</bean>

	&lt;!&ndash; JobDetail, 基于JobDetailBean实例化Job Class,可持久化到数据库实现集群 &ndash;&gt;
	<bean id="timerJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="oop.appengine.examples.showcase.demos.schedule.QuartzClusterableJob" />
	</bean>

	&lt;!&ndash; Job的可配置属性,在job中通过applicationContext动态获取 &ndash;&gt;
	<util:map id="timerJobConfig">
		<entry key="nodeName" value="${server.node_name}" />
	</util:map>-->
</beans>
